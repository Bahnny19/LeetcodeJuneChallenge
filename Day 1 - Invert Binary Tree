*Invert Binary Tree*
Invert a binary tree.
--------------------------------------------------------------------------------------------------------------------------
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def invertTree(self, root: TreeNode) -> TreeNode:
        if root == None:
            return root
        if root.left == None and root.right == None :
            return root
        temp = root.left
        root.left = self.invertTree(root.right)
        root.right = self.invertTree(temp)
        
        return root
        
--------------------------------------------------------------------------------------------------------------------------
68 / 68 test cases passed.
Status: Accepted
Runtime: 32 ms
Memory Usage: 13.6 MB
